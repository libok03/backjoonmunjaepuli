#11726

# 문제
# 2×n 크기의 직사각형을 1×2, 2×1 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오.

# 아래 그림은 2×5 크기의 직사각형을 채운 한 가지 방법의 예이다.



# 입력
# 첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1,000)

# 출력
# 첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10,007로 나눈 나머지를 출력한다.


# DP문제이다.
# N =1일때 1
# N =2일때 2
# N =3일때 3
# N =4일때 5
# N =5일때 8
# N =6일때 13

# 으로 F(N)=F(N-1)+F(N-2)와 다름이 없음을 알 수 있다.

# 그래서 내가 해야하는 일은 
# 1. list로 1,2,3 입력하기,

dp=[0,1,2,3]

# 2. DP로 만들기 (메모제이셩을 이용하자!)

def tiling(N):
    # dp안에 이미 저장되어있으면 그대로 꺼내기
    if len(dp)>=N+1:
        return dp[N]
    # 아닌경우
    else:
    # 그 숫자가 될때까지
        while len(dp) < N+1:
            dp.append((dp[-1]+dp[-2])%10007)
        return dp[N]
# 주의사항 #
# while문 돌릴때 그안에 있는건 되도록 그함수를 그대로 꺼내오는 것이 아니라 
# 그냘 수식(?) 만을 입력한다.
# 표현할 단어가 생각이 안남으로 나중에 다시 추가 하기로
print(tiling(int(input())))
